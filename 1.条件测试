1.示例
>>> for car in cars:
	if car =='bmw':
		print(car.upper())
	else:
		print(car.title())

		
Audi
BMW
Subaru
Toyota

2.条件测试
每条if语句的核心都是一个值为True/False的表达式
这种表达式被称为条件测试
py根据条件测试的值是true/false来决定是否执行if语句中的代码。
是true则执行
是false则忽略

2.1检查是否相等
大多数条件测试都是将一个变量的当前值和特定值进行比较
最简单的条件测试检查变量的值是否和特定值相等
比如
>>> car='bmw'
>>> car=='bmw'
True
>>> car=='Bmw'
False

一个等号表示陈述，将car变量的值设置为audi。
两个等号是发问，car变量的值是'bmw'吗？

2.2检查是否相等时，区分大小写
对变量使用‘方法’时，不影响其存储值，只是暂时的改变。变量还是保留使用方法之前的值。
>>> car='bmw'
>>> car.upper()
'BMW'
>>> print(car)
bmw

2.3检查是否不相等！=
例如
>>> requested_topping='mushrooms'
>>> if requested_topping!='anchovies':
	print("Hold the anchovies!")

Hold the anchovies!

2.4比较数字
>>> age=18
>>> age==18
True
>>> age==17
False

也可以检查两个数字是否不相等
>>> answer=17
>>> if answer!=42:
	print('That is not the correct answer.Please try again!')

	
That is not the correct answer.Please try again!

还可以比较小于，小于等于，大于，大于等于。。。
比如
>>> age=19
>>> age<21
True
>>> age<=21
True
>>> age>21
False
>>> age>=21
False

2.5检查多个条件
有时候需要在两个条件都为True的时候才执行操作
有时候只需要在一个条件为True的时候就执行操作
关键字and和or可以助你一臂之力

2.5.1
使用and 检查多个条件
两个条件都为True的时候才能通过

比如
>>> age_0=21
>>> age_1=18
>>> age_0>=22 and age_1 >=10
False
>>> age_0<=22 and age_1>=10
True

为了改善可读性，可以把每个测试都放在一对括号内。
>> age_0=21
>>> age_1=18
>>> (age_0>=22) and (age_1 >=10)
False
>>> (age_0<=22) and (age_1>=10)
True

2.6 使用or检查多个条件
只要有一个条件满足，即可通过测试。当两个条件都不满足时，才会等于false
例如
>>> age_0=22
>>> age_1=18
>>> age_0>=21 or age_1 >=21
True
>>> age_0=18
>>> age_1>=21 or age_1 >=21
False

2.7检查特定值是否包含在列表中
方法：创建一个列表后，用关键字in
例如
>>> requested_toppings=['mushrooms','onions','pineapple']
>>> 'mushrooms' in requested_toppings
True
>>> 'banana' in requested_toppings
False

2.7.2检查特定值是否不包含在列表中
方法：创建一个列表后，用关键字not in
例如
>>> banned_users=['andrew','carolina','david']
>>> user='betty'
>>> 
>>> if user not in banned_users:
	print(user.title() +', you can post a response if you wish.')

	
Betty, you can post a response if you wish.







